version: "3.8"

services:
  prometheus:
    image: prom/prometheus
    container_name: prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
    ports:
      - 9090:9090
    restart: unless-stopped
    volumes:
      - ./prometheus:/etc/prometheus
      - prom_data:/prometheus
    networks:
      - paku_network

  #alertmanager:
  #  image: prom/alertmanager
  #  container_name: alertmanager
  #  command:
  #    - '--config.file=/etc/alertmanager/alertmanager.yml'
  #  ports:
  #    - 9093:9093
  #  restart: unless-stopped
  #  volumes:
  #    - ./alertmanager:/etc/alertmanager
  #  networks:
  #    - paku_network

  grafana:
    image: grafana/grafana
    container_name: grafana
    ports:
      - 3000:3000
    restart: unless-stopped
    environment:
      GF_SECURITY_ADMIN_USER: ${GRAFANA_USERNAME}
      GF_SECURITY_ADMIN_PASSWORD: "${GRAFANA_PASSWORD}"
    volumes:
      - ./grafana:/etc/grafana/provisioning/datasources
      - ./grafana/dashboards:/var/lib/grafana/dashboards
      - ./grafana/provisioning/dashboards:/etc/grafana/provisioning/dashboards
      - grafana_data:/var/lib/grafana
    networks:
      - paku_network

  ecoflow_mqtt_exporter:
    image: ghcr.io/berezhinskiy/ecoflow_exporter
    container_name: ecoflow_mqtt_exporter
    ports:
      - 9091:9091
    restart: unless-stopped
    environment:
      DEVICE_SN: ${DEVICE_SN}
      ECOFLOW_USERNAME: ${ECOFLOW_USERNAME}
      ECOFLOW_PASSWORD: "${ECOFLOW_PASSWORD}"
      EXPORTER_PORT: 9091
    networks:
      - paku_network

  ecoflow_api_exporter:
    build: ./api-exporterr
    environment:
      - CLIENT_ID=${CLIENT_ID}
      - CLIENT_SECRET=${CLIENT_SECRET}
      - DEVICE_SN=${DEVICE_SN}
    ports:
      - "9101:9101"
    networks:
      - paku_network
    restart: unless-stopped


networks:
  paku_network:
    driver: bridge
    name: paku_network

volumes:
  prom_data:
    name: prom_data
  grafana_data:
    name: grafana_data
